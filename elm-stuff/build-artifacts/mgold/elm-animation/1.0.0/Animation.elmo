Elm.Animation = Elm.Animation || {};
Elm.Animation.make = function (_elm) {
   "use strict";
   _elm.Animation = _elm.Animation || {};
   if (_elm.Animation.values)
   return _elm.Animation.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Animation",
   $Basics = Elm.Basics.make(_elm),
   $Easing = Elm.Easing.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Time = Elm.Time.make(_elm);
   var isScheduled = F2(function (t,
   _v0) {
      return function () {
         switch (_v0.ctor)
         {case "A": return _U.cmp(t,
              _v0._0.start + _v0._0.delay) < 1;}
         _U.badCase($moduleName,
         "on line 290, column 5 to 21");
      }();
   });
   var getTo = function (_v3) {
      return function () {
         switch (_v3.ctor)
         {case "A": return _v3._0.to;}
         _U.badCase($moduleName,
         "on line 259, column 15 to 19");
      }();
   };
   var getFrom = function (_v6) {
      return function () {
         switch (_v6.ctor)
         {case "A": return _v6._0.from;}
         _U.badCase($moduleName,
         "on line 254, column 17 to 23");
      }();
   };
   var getEase = function (_v9) {
      return function () {
         switch (_v9.ctor)
         {case "A": return _v9._0.ease;}
         _U.badCase($moduleName,
         "on line 249, column 17 to 23");
      }();
   };
   var getDelay = function (_v12) {
      return function () {
         switch (_v12.ctor)
         {case "A":
            return _v12._0.delay;}
         _U.badCase($moduleName,
         "on line 244, column 18 to 25");
      }();
   };
   var getStart = function (_v15) {
      return function () {
         switch (_v15.ctor)
         {case "A":
            return _v15._0.start;}
         _U.badCase($moduleName,
         "on line 229, column 18 to 25");
      }();
   };
   var timeElapsed = F2(function (t,
   _v18) {
      return function () {
         switch (_v18.ctor)
         {case "A":
            return $Basics.max(0)(t - (_v18._0.start + _v18._0.delay));}
         _U.badCase($moduleName,
         "on line 206, column 5 to 33");
      }();
   });
   var spd = F3(function (dos,
   from,
   to) {
      return function () {
         switch (dos.ctor)
         {case "Duration":
            return $Basics.abs(to - from) / dos._0;
            case "Speed": return dos._0;}
         _U.badCase($moduleName,
         "between lines 101 and 103");
      }();
   });
   var getSpeed = function (_v24) {
      return function () {
         switch (_v24.ctor)
         {case "A": return A3(spd,
              _v24._0.dos,
              _v24._0.from,
              _v24._0.to);}
         _U.badCase($moduleName,
         "on line 239, column 32 to 47");
      }();
   };
   var dur = F3(function (dos,
   from,
   to) {
      return function () {
         switch (dos.ctor)
         {case "Duration": return dos._0;
            case "Speed":
            return $Basics.abs(to - from) / dos._0;}
         _U.badCase($moduleName,
         "between lines 94 and 96");
      }();
   });
   var animate = F2(function (t,
   _v30) {
      return function () {
         switch (_v30.ctor)
         {case "A": return function () {
                 var duration = A3(dur,
                 _v30._0.dos,
                 _v30._0.from,
                 _v30._0.to);
                 var fr = A2($Basics.clamp,
                 0,
                 1)((t - _v30._0.start - _v30._0.delay) / duration);
                 var eased = _v30._0.ease(fr);
                 var correction = function () {
                    var _v33 = _v30._0.ramp;
                    switch (_v33.ctor)
                    {case "Just":
                       return function () {
                            var from$ = _v33._0 * (t - _v30._0.start);
                            var eased$ = $Easing.easeInOutSine(fr);
                            return from$ - from$ * eased$;
                         }();
                       case "Nothing": return 0;}
                    _U.badCase($moduleName,
                    "between lines 127 and 132");
                 }();
                 return _v30._0.from + (_v30._0.to - _v30._0.from) * eased + correction;
              }();}
         _U.badCase($moduleName,
         "between lines 124 and 132");
      }();
   });
   var velocity = F2(function (t,
   u) {
      return function () {
         var forwDiff = A2(animate,
         t + 10,
         u);
         var backDiff = A2(animate,
         t - 10,
         u);
         return (forwDiff - backDiff) / 20;
      }();
   });
   var timeRemaining = F2(function (t,
   _v35) {
      return function () {
         switch (_v35.ctor)
         {case "A": return function () {
                 var duration = A3(dur,
                 _v35._0.dos,
                 _v35._0.from,
                 _v35._0.to);
                 return $Basics.max(0)(_v35._0.start + _v35._0.delay + duration - t);
              }();}
         _U.badCase($moduleName,
         "between lines 213 and 214");
      }();
   });
   var getDuration = function (_v38) {
      return function () {
         switch (_v38.ctor)
         {case "A": return A3(dur,
              _v38._0.dos,
              _v38._0.from,
              _v38._0.to);}
         _U.badCase($moduleName,
         "on line 234, column 35 to 50");
      }();
   };
   var equals = F2(function (_v41,
   _v42) {
      return function () {
         switch (_v42.ctor)
         {case "A": return function () {
                 switch (_v41.ctor)
                 {case "A":
                    return _U.eq(_v41._0.start + _v41._0.delay,
                      _v42._0.start + _v42._0.delay) && (_U.eq(_v41._0.from,
                      _v42._0.from) && (_U.eq(_v41._0.to,
                      _v42._0.to) && (_U.eq(_v41._0.ramp,
                      _v42._0.ramp) && ((_U.eq(_v41._0.dos,
                      _v42._0.dos) || _U.cmp(1.0e-3,
                      $Basics.abs(A3(dur,
                      _v41._0.dos,
                      _v41._0.from,
                      _v41._0.to) - A3(dur,
                      _v42._0.dos,
                      _v42._0.from,
                      _v42._0.to))) > -1) && A2($List.all,
                      function (t) {
                         return _U.eq(_v41._0.ease(t),
                         _v42._0.ease(t));
                      },
                      _L.fromArray([0.1
                                   ,0.3
                                   ,0.7
                                   ,0.9]))))));}
                 _U.badCase($moduleName,
                 "between lines 278 and 283");
              }();}
         _U.badCase($moduleName,
         "between lines 278 and 283");
      }();
   });
   var isRunning = F2(function (t,
   _v47) {
      return function () {
         switch (_v47.ctor)
         {case "A": return function () {
                 var duration = A3(dur,
                 _v47._0.dos,
                 _v47._0.from,
                 _v47._0.to);
                 return _U.cmp(t,
                 _v47._0.start + _v47._0.delay) > 0 && _U.cmp(t,
                 _v47._0.start + _v47._0.delay + duration) < 0;
              }();}
         _U.badCase($moduleName,
         "between lines 296 and 297");
      }();
   });
   var isDone = F2(function (t,
   _v50) {
      return function () {
         switch (_v50.ctor)
         {case "A": return function () {
                 var duration = A3(dur,
                 _v50._0.dos,
                 _v50._0.from,
                 _v50._0.to);
                 return _U.cmp(t,
                 _v50._0.start + _v50._0.delay + duration) > -1;
              }();}
         _U.badCase($moduleName,
         "between lines 303 and 304");
      }();
   });
   var A = function (a) {
      return {ctor: "A",_0: a};
   };
   var undo = F2(function (t,
   _v53) {
      return function () {
         switch (_v53.ctor)
         {case "A":
            return A(_U.replace([["from"
                                 ,_v53._0.to]
                                ,["to",_v53._0.from]
                                ,["start",t]
                                ,["delay"
                                 ,0 - A2(timeRemaining,t,_v53)]
                                ,["ramp",$Maybe.Nothing]
                                ,["ease"
                                 ,function (t) {
                                    return 1 - _v53._0.ease(1 - t);
                                 }]],
              _v53._0));}
         _U.badCase($moduleName,
         "between lines 142 and 143");
      }();
   });
   var delay = F2(function (x,
   _v56) {
      return function () {
         switch (_v56.ctor)
         {case "A":
            return A(_U.replace([["delay"
                                 ,x]],
              _v56._0));}
         _U.badCase($moduleName,
         "on line 181, column 17 to 34");
      }();
   });
   var ease = F2(function (x,
   _v59) {
      return function () {
         switch (_v59.ctor)
         {case "A":
            return A(_U.replace([["ease"
                                 ,x]],
              _v59._0));}
         _U.badCase($moduleName,
         "on line 187, column 16 to 32");
      }();
   });
   var from = F2(function (x,
   _v62) {
      return function () {
         switch (_v62.ctor)
         {case "A":
            return A(_U.replace([["from",x]
                                ,["ramp",$Maybe.Nothing]],
              _v62._0));}
         _U.badCase($moduleName,
         "on line 192, column 16 to 49");
      }();
   });
   var to = F2(function (x,_v65) {
      return function () {
         switch (_v65.ctor)
         {case "A":
            return A(_U.replace([["to",x]
                                ,["ramp",$Maybe.Nothing]],
              _v65._0));}
         _U.badCase($moduleName,
         "on line 199, column 14 to 45");
      }();
   });
   var AnimRecord = F7(function (a,
   b,
   c,
   d,
   e,
   f,
   g) {
      return {_: {}
             ,delay: b
             ,dos: c
             ,ease: e
             ,from: f
             ,ramp: d
             ,start: a
             ,to: g};
   });
   var Speed = function (a) {
      return {ctor: "Speed",_0: a};
   };
   var speed = F2(function (x,
   _v68) {
      return function () {
         switch (_v68.ctor)
         {case "A":
            return A(_U.replace([["dos"
                                 ,Speed($Basics.abs(x))]],
              _v68._0));}
         _U.badCase($moduleName,
         "on line 175, column 17 to 44");
      }();
   });
   var Duration = function (a) {
      return {ctor: "Duration"
             ,_0: a};
   };
   var defaultDuration = Duration(750 * $Time.millisecond);
   var animation = function (now) {
      return A(A7(AnimRecord,
      now,
      0,
      defaultDuration,
      $Maybe.Nothing,
      $Easing.easeInOutSine,
      0,
      1));
   };
   var retarget = F3(function (t,
   newTo,
   _v71) {
      return function () {
         switch (_v71.ctor)
         {case "A":
            return A2(isScheduled,
              t,
              _v71) ? A(_U.replace([["to"
                                    ,newTo]
                                   ,["ramp",$Maybe.Nothing]],
              _v71._0)) : A2(isDone,
              t,
              _v71) ? A(_U.replace([["start"
                                    ,t]
                                   ,["from",_v71._0.to]
                                   ,["to",newTo]
                                   ,["delay",0]
                                   ,["ramp",$Maybe.Nothing]],
              _v71._0)) : _U.eq(_v71._0.from,
              _v71._0.to) ? A(_U.replace([["start"
                                          ,t]
                                         ,["to",newTo]
                                         ,["dos",defaultDuration]
                                         ,["ramp",$Maybe.Nothing]],
              _v71._0)) : function () {
                 var pos = A2(animate,t,_v71);
                 var vel = A2(velocity,t,_v71);
                 return A(A7(AnimRecord,
                 t,
                 0,
                 Speed(vel / 3),
                 $Maybe.Just(vel),
                 _v71._0.ease,
                 pos,
                 newTo));
              }();}
         _U.badCase($moduleName,
         "between lines 155 and 161");
      }();
   });
   var $static = function (x) {
      return A(A7(AnimRecord,
      0,
      0,
      Duration(0),
      $Maybe.Nothing,
      $Easing.easeInOutSine,
      x,
      x));
   };
   var duration = F2(function (x,
   _v74) {
      return function () {
         switch (_v74.ctor)
         {case "A":
            return A(_U.replace([["dos"
                                 ,Duration(x)]],
              _v74._0));}
         _U.badCase($moduleName,
         "on line 167, column 20 to 44");
      }();
   });
   _elm.Animation.values = {_op: _op
                           ,animation: animation
                           ,$static: $static
                           ,animate: animate
                           ,duration: duration
                           ,speed: speed
                           ,delay: delay
                           ,ease: ease
                           ,from: from
                           ,to: to
                           ,undo: undo
                           ,retarget: retarget
                           ,getStart: getStart
                           ,getDuration: getDuration
                           ,getSpeed: getSpeed
                           ,getDelay: getDelay
                           ,getEase: getEase
                           ,getFrom: getFrom
                           ,getTo: getTo
                           ,equals: equals
                           ,velocity: velocity
                           ,timeElapsed: timeElapsed
                           ,timeRemaining: timeRemaining
                           ,isScheduled: isScheduled
                           ,isRunning: isRunning
                           ,isDone: isDone};
   return _elm.Animation.values;
};