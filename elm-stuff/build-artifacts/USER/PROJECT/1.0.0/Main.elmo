Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values)
   return _elm.Main.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Main",
   $Basics = Elm.Basics.make(_elm),
   $Config = Elm.Config.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $Input = Elm.Input.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Models$GameState = Elm.Models.GameState.make(_elm),
   $Random = Elm.Random.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Views$Grid = Elm.Views.Grid.make(_elm),
   $Views$NewGame = Elm.Views.NewGame.make(_elm),
   $Views$Objective = Elm.Views.Objective.make(_elm),
   $Views$Score = Elm.Views.Score.make(_elm),
   $Views$Title = Elm.Views.Title.make(_elm);
   var view = function (game) {
      return A2($Graphics$Element.flow,
      $Graphics$Element.down,
      _L.fromArray([A2($Graphics$Element.flow,
                   $Graphics$Element.right,
                   _L.fromArray([$Views$Title.render
                                ,$Views$Score.render(game.score)]))
                   ,A2($Graphics$Element.flow,
                   $Graphics$Element.right,
                   _L.fromArray([$Views$Objective.render
                                ,$Views$NewGame.render($Input.newGame)]))
                   ,A2($Views$Grid.render,
                   $Config.defaultConfig,
                   game)]));
   };
   var startTime = 5;
   var startTimeSeed = $Random.initialSeed($Basics.round(startTime));
   var gameState = A3($Signal.foldp,
   $Models$GameState.update,
   $Models$GameState.initial(startTimeSeed),
   $Input.input);
   var main = A2($Signal.map,
   view,
   gameState);
   _elm.Main.values = {_op: _op
                      ,startTime: startTime
                      ,startTimeSeed: startTimeSeed
                      ,gameState: gameState
                      ,view: view
                      ,main: main};
   return _elm.Main.values;
};