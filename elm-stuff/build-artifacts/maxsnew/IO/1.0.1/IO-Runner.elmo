Elm.IO = Elm.IO || {};
Elm.IO.Runner = Elm.IO.Runner || {};
Elm.IO.Runner.make = function (_elm) {
   "use strict";
   _elm.IO = _elm.IO || {};
   _elm.IO.Runner = _elm.IO.Runner || {};
   if (_elm.IO.Runner.values)
   return _elm.IO.Runner.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "IO.Runner",
   $Basics = Elm.Basics.make(_elm),
   $IO$IO = Elm.IO.IO.make(_elm),
   $Json$Decode = Elm.Json.Decode.make(_elm),
   $Json$Encode = Elm.Json.Encode.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm),
   $Trampoline = Elm.Trampoline.make(_elm);
   var mapFst = F2(function (f,
   _v0) {
      return function () {
         switch (_v0.ctor)
         {case "_Tuple2":
            return {ctor: "_Tuple2"
                   ,_0: f(_v0._0)
                   ,_1: _v0._1};}
         _U.badCase($moduleName,
         "on line 154, column 19 to 25");
      }();
   });
   var put = F2(function (s,_v4) {
      return function () {
         return {ctor: "_Tuple2"
                ,_0: s
                ,_1: {ctor: "_Tuple0"}};
      }();
   });
   var ask = function (s) {
      return {ctor: "_Tuple2"
             ,_0: s
             ,_1: s};
   };
   _op[">>="] = F3(function (f,
   k,
   s) {
      return function () {
         var $ = f(s),
         s$ = $._0,
         y = $._1;
         return A2(k,y,s$);
      }();
   });
   var pure = F2(function (x,s) {
      return {ctor: "_Tuple2"
             ,_0: s
             ,_1: x};
   });
   var mapSt = F2(function (f,sf) {
      return A2(_op[">>="],
      sf,
      function ($) {
         return pure(f($));
      });
   });
   var serialize = function (reqs) {
      return function () {
         var serReq = function (req) {
            return function () {
               switch (req.ctor)
               {case "Exit":
                  return $Json$Encode.object(_L.fromArray([{ctor: "_Tuple2"
                                                           ,_0: "ctor"
                                                           ,_1: $Json$Encode.string("Exit")}
                                                          ,{ctor: "_Tuple2"
                                                           ,_0: "val"
                                                           ,_1: $Json$Encode.$int(req._0)}]));
                  case "Get":
                  return $Json$Encode.object(_L.fromArray([{ctor: "_Tuple2"
                                                           ,_0: "ctor"
                                                           ,_1: $Json$Encode.string("Get")}]));
                  case "Put":
                  return $Json$Encode.object(_L.fromArray([{ctor: "_Tuple2"
                                                           ,_0: "ctor"
                                                           ,_1: $Json$Encode.string("Put")}
                                                          ,{ctor: "_Tuple2"
                                                           ,_0: "val"
                                                           ,_1: $Json$Encode.string(req._0)}]));
                  case "WriteFile":
                  return $Json$Encode.object(_L.fromArray([{ctor: "_Tuple2"
                                                           ,_0: "ctor"
                                                           ,_1: $Json$Encode.string("WriteFile")}
                                                          ,{ctor: "_Tuple2"
                                                           ,_0: "file"
                                                           ,_1: $Json$Encode.string(req._0.file)}
                                                          ,{ctor: "_Tuple2"
                                                           ,_0: "content"
                                                           ,_1: $Json$Encode.string(req._0.content)}]));}
               _U.badCase($moduleName,
               "between lines 66 and 78");
            }();
         };
         return $Json$Encode.list(A2($List.map,
         serReq,
         reqs));
      }();
   };
   var resDecoder = A2($Json$Decode._op[":="],
   "Just",
   $Json$Decode.string);
   var deserialize = function (resp) {
      return $Result.toMaybe(A2($Json$Decode.decodeValue,
      resDecoder,
      resp));
   };
   var start = {_: {},buffer: ""};
   var IOState = function (a) {
      return {_: {},buffer: a};
   };
   var WriteFile = function (a) {
      return {ctor: "WriteFile"
             ,_0: a};
   };
   var writeF = WriteFile;
   var Get = {ctor: "Get"};
   var getS = Get;
   var Exit = function (a) {
      return {ctor: "Exit",_0: a};
   };
   var exit = Exit;
   var Put = function (a) {
      return {ctor: "Put",_0: a};
   };
   var putS = Put;
   var extractRequests = function (io) {
      return function () {
         switch (io.ctor)
         {case "Impure":
            return function () {
                 switch (io._0.ctor)
                 {case "Exit":
                    return pure({ctor: "_Tuple2"
                                ,_0: _L.fromArray([exit(io._0._0)])
                                ,_1: function (_v20) {
                                   return function () {
                                      return io;
                                   }();
                                }});
                    case "GetC":
                    return A2(_op[">>="],
                      ask,
                      function (st) {
                         return function () {
                            var _v22 = $String.uncons(st.buffer);
                            switch (_v22.ctor)
                            {case "Just":
                               switch (_v22._0.ctor)
                                 {case "_Tuple2":
                                    return A2(_op[">>="],
                                      put({_: {},buffer: _v22._0._1}),
                                      function (_v26) {
                                         return function () {
                                            return extractRequests(io._0._0(_v22._0._0));
                                         }();
                                      });}
                                 break;
                               case "Nothing":
                               return pure({ctor: "_Tuple2"
                                           ,_0: _L.fromArray([getS])
                                           ,_1: function (_v28) {
                                              return function () {
                                                 return io;
                                              }();
                                           }});}
                            _U.badCase($moduleName,
                            "between lines 103 and 107");
                         }();
                      });
                    case "PutS":
                    return mapSt(mapFst(function (rs) {
                         return A2($List._op["::"],
                         putS(io._0._0),
                         rs);
                      }))(pure({ctor: "_Tuple2"
                               ,_0: _L.fromArray([])
                               ,_1: io._0._1}));
                    case "WriteF":
                    return mapSt(mapFst(function (rs) {
                         return A2($List._op["::"],
                         writeF(io._0._0),
                         rs);
                      }))(pure({ctor: "_Tuple2"
                               ,_0: _L.fromArray([])
                               ,_1: io._0._1}));}
                 _U.badCase($moduleName,
                 "between lines 97 and 107");
              }();
            case "Pure":
            return pure({ctor: "_Tuple2"
                        ,_0: _L.fromArray([exit(0)])
                        ,_1: function (_v30) {
                           return function () {
                              return $IO$IO.Pure(io._0);
                           }();
                        }});}
         _U.badCase($moduleName,
         "between lines 95 and 107");
      }();
   };
   var step = F3(function (resp,
   io,
   st) {
      return function () {
         var newST = function () {
            switch (resp.ctor)
            {case "Just":
               return _U.replace([["buffer"
                                  ,A2($String.append,
                                  st.buffer,
                                  resp._0)]],
                 st);
               case "Nothing": return st;}
            _U.badCase($moduleName,
            "between lines 128 and 131");
         }();
         var _ = A2(extractRequests,
         io({ctor: "_Tuple0"}),
         newST);
         var k = function () {
            switch (_.ctor)
            {case "_Tuple2":
               switch (_._1.ctor)
                 {case "_Tuple2":
                    return _._1._1;}
                 break;}
            _U.badCase($moduleName,
            "on line 131, column 27 to 56");
         }();
         var newST$ = function () {
            switch (_.ctor)
            {case "_Tuple2":
               switch (_._1.ctor)
                 {case "_Tuple2": return _._0;}
                 break;}
            _U.badCase($moduleName,
            "on line 131, column 27 to 56");
         }();
         var rs = function () {
            switch (_.ctor)
            {case "_Tuple2":
               switch (_._1.ctor)
                 {case "_Tuple2":
                    return _._1._0;}
                 break;}
            _U.badCase($moduleName,
            "on line 131, column 27 to 56");
         }();
         return {ctor: "_Tuple3"
                ,_0: k
                ,_1: newST$
                ,_2: rs};
      }();
   });
   var run = F2(function (resps,
   io) {
      return function () {
         var third = function (_v49) {
            return function () {
               switch (_v49.ctor)
               {case "_Tuple3":
                  return _v49._2;}
               _U.badCase($moduleName,
               "on line 54, column 28 to 29");
            }();
         };
         var f = F2(function (resp,
         _v54) {
            return function () {
               switch (_v54.ctor)
               {case "_Tuple3": return A3(step,
                    deserialize(resp),
                    _v54._0,
                    _v54._1);}
               _U.badCase($moduleName,
               "on line 53, column 28 to 57");
            }();
         });
         var init = {ctor: "_Tuple3"
                    ,_0: function (_v59) {
                       return function () {
                          return io;
                       }();
                    }
                    ,_1: start
                    ,_2: _L.fromArray([])};
         return A2($Signal._op["<~"],
         function ($) {
            return serialize(third($));
         },
         A3($Signal.foldp,f,init,resps));
      }();
   });
   var flattenReqs = function (rs) {
      return function () {
         var loop = F3(function (rs,
         acc,
         n) {
            return _U.cmp(n,
            100) > -1 ? $Trampoline.Continue(function (_v61) {
               return function () {
                  return A3(loop,rs,acc,0);
               }();
            }) : function () {
               switch (rs.ctor)
               {case "::": switch (rs._1.ctor)
                    {case "::": return function () {
                            var _v68 = {ctor: "_Tuple2"
                                       ,_0: rs._0
                                       ,_1: rs._1._0};
                            switch (_v68.ctor)
                            {case "_Tuple2":
                               switch (_v68._0.ctor)
                                 {case "Exit": return A3(loop,
                                      _L.fromArray([]),
                                      A2($List._op["::"],rs._0,acc),
                                      _v68._0._0 + 1);
                                    case "Put":
                                    switch (_v68._1.ctor)
                                      {case "Put": return A3(loop,
                                           A2($List._op["::"],
                                           putS(A2($Basics._op["++"],
                                           _v68._0._0,
                                           _v68._1._0)),
                                           rs._1._1),
                                           acc,
                                           n + 1);}
                                      break;}
                                 break;}
                            return A3(loop,
                            A2($List._op["::"],
                            rs._1._0,
                            rs._1._1),
                            A2($List._op["::"],rs._0,acc),
                            n + 1);
                         }();
                       case "[]": return A3(loop,
                         _L.fromArray([]),
                         A2($List._op["::"],rs._0,acc),
                         n + 1);}
                    break;
                  case "[]":
                  return $Trampoline.Done($List.reverse(acc));}
               _U.badCase($moduleName,
               "between lines 115 and 123");
            }();
         });
         return $Trampoline.trampoline(A3(loop,
         rs,
         _L.fromArray([]),
         0));
      }();
   };
   _elm.IO.Runner.values = {_op: _op
                           ,run: run};
   return _elm.IO.Runner.values;
};