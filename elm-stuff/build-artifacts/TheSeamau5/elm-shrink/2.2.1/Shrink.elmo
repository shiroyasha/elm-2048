Elm.Shrink = Elm.Shrink || {};
Elm.Shrink.make = function (_elm) {
   "use strict";
   _elm.Shrink = _elm.Shrink || {};
   if (_elm.Shrink.values)
   return _elm.Shrink.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Shrink",
   $Array = Elm.Array.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Char = Elm.Char.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm),
   $Trampoline = Elm.Trampoline.make(_elm);
   var iterate$ = F4(function (n,
   f,
   a,
   accum) {
      return _U.cmp(n,
      0) < 1 ? $Trampoline.Done(accum) : $Trampoline.Continue(function (_v0) {
         return function () {
            switch (_v0.ctor)
            {case "_Tuple0":
               return A4(iterate$,
                 n - 1,
                 f,
                 f(a),
                 A2($Basics._op["++"],
                 accum,
                 _L.fromArray([a])));}
            _U.badCase($moduleName,
            "on line 455, column 22 to 60");
         }();
      });
   });
   var iterate = F3(function (n,
   f,
   a) {
      return $Trampoline.trampoline(A4(iterate$,
      n,
      f,
      a,
      _L.fromArray([])));
   });
   var takeWhile$ = F3(function (predicate,
   list,
   accum) {
      return function () {
         switch (list.ctor)
         {case "::":
            return predicate(list._0) ? $Trampoline.Continue(function (_v5) {
                 return function () {
                    switch (_v5.ctor)
                    {case "_Tuple0":
                       return A3(takeWhile$,
                         predicate,
                         list._1,
                         A2($Basics._op["++"],
                         accum,
                         _L.fromArray([list._0])));}
                    _U.badCase($moduleName,
                    "on line 442, column 24 to 61");
                 }();
              }) : $Trampoline.Done(accum);
            case "[]":
            return $Trampoline.Done(accum);}
         _U.badCase($moduleName,
         "between lines 436 and 444");
      }();
   });
   var takeWhile = F2(function (predicate,
   list) {
      return $Trampoline.trampoline(A3(takeWhile$,
      predicate,
      list,
      _L.fromArray([])));
   });
   var unique = function (list) {
      return function () {
         switch (list.ctor)
         {case "::":
            return A2($List.member,
              list._0,
              list._1) ? unique(list._1) : A2($List._op["::"],
              list._0,
              unique(list._1));
            case "[]":
            return _L.fromArray([]);}
         _U.badCase($moduleName,
         "between lines 422 and 429");
      }();
   };
   var seriesFloat$ = F3(function (low,
   high,
   accum) {
      return _U.cmp(low,
      high - 1.0e-4) > -1 ? $Trampoline.Done(accum) : function () {
         var low$ = low + (high - low) / 2;
         return $Trampoline.Continue(function (_v10) {
            return function () {
               switch (_v10.ctor)
               {case "_Tuple0":
                  return A3(seriesFloat$,
                    low$,
                    high,
                    A2($Basics._op["++"],
                    accum,
                    _L.fromArray([low])));}
               _U.badCase($moduleName,
               "on line 418, column 26 to 64");
            }();
         });
      }();
   });
   var seriesFloat = F2(function (low,
   high) {
      return $Trampoline.trampoline(A3(seriesFloat$,
      low,
      high,
      _L.fromArray([])));
   });
   var seriesInt$ = F3(function (low,
   high,
   accum) {
      return _U.cmp(low,
      high) > -1 ? $Trampoline.Done(accum) : _U.eq(low,
      high - 1) ? $Trampoline.Done(A2($Basics._op["++"],
      accum,
      _L.fromArray([low]))) : function () {
         var low$ = low + ((high - low) / 2 | 0);
         return $Trampoline.Continue(function (_v12) {
            return function () {
               switch (_v12.ctor)
               {case "_Tuple0":
                  return A3(seriesInt$,
                    low$,
                    high,
                    A2($Basics._op["++"],
                    accum,
                    _L.fromArray([low])));}
               _U.badCase($moduleName,
               "on line 403, column 30 to 66");
            }();
         });
      }();
   });
   var seriesInt = F2(function (low,
   high) {
      return $Trampoline.trampoline(A3(seriesInt$,
      low,
      high,
      _L.fromArray([])));
   });
   var andMap = $List.map2(F2(function (x,
   y) {
      return x(y);
   }));
   var map = $List.map;
   var merge = F3(function (shrink1,
   shrink2,
   a) {
      return unique(A2($Basics._op["++"],
      shrink1(a),
      shrink2(a)));
   });
   var keepIf = F3(function (predicate,
   shrink,
   a) {
      return A2($List.filter,
      predicate,
      shrink(a));
   });
   var dropIf = function (predicate) {
      return keepIf(function ($) {
         return $Basics.not(predicate($));
      });
   };
   var convert = F4(function (f,
   f$,
   shrink,
   b) {
      return A2($List.map,
      f,
      shrink(f$(b)));
   });
   var tuple5 = F2(function (_v14,
   _v15) {
      return function () {
         switch (_v15.ctor)
         {case "_Tuple5":
            return function () {
                 switch (_v14.ctor)
                 {case "_Tuple5":
                    return A2($Basics._op["++"],
                      A2($List.map,
                      function (e) {
                         return {ctor: "_Tuple5"
                                ,_0: _v15._0
                                ,_1: _v15._1
                                ,_2: _v15._2
                                ,_3: _v15._3
                                ,_4: e};
                      },
                      _v14._4(_v15._4)),
                      A2($Basics._op["++"],
                      A2($List.map,
                      function (d) {
                         return {ctor: "_Tuple5"
                                ,_0: _v15._0
                                ,_1: _v15._1
                                ,_2: _v15._2
                                ,_3: d
                                ,_4: _v15._4};
                      },
                      _v14._3(_v15._3)),
                      A2($Basics._op["++"],
                      A2($List.map,
                      function (c) {
                         return {ctor: "_Tuple5"
                                ,_0: _v15._0
                                ,_1: _v15._1
                                ,_2: c
                                ,_3: _v15._3
                                ,_4: _v15._4};
                      },
                      _v14._2(_v15._2)),
                      A2($Basics._op["++"],
                      A2($List.map,
                      function (b) {
                         return {ctor: "_Tuple5"
                                ,_0: _v15._0
                                ,_1: b
                                ,_2: _v15._2
                                ,_3: _v15._3
                                ,_4: _v15._4};
                      },
                      _v14._1(_v15._1)),
                      A2($Basics._op["++"],
                      A2($List.map,
                      function (a) {
                         return {ctor: "_Tuple5"
                                ,_0: a
                                ,_1: _v15._1
                                ,_2: _v15._2
                                ,_3: _v15._3
                                ,_4: _v15._4};
                      },
                      _v14._0(_v15._0)),
                      A2($Basics._op["++"],
                      A3($List.map2,
                      F2(function (d,e) {
                         return {ctor: "_Tuple5"
                                ,_0: _v15._0
                                ,_1: _v15._1
                                ,_2: _v15._2
                                ,_3: d
                                ,_4: e};
                      }),
                      _v14._3(_v15._3),
                      _v14._4(_v15._4)),
                      A2($Basics._op["++"],
                      A3($List.map2,
                      F2(function (c,e) {
                         return {ctor: "_Tuple5"
                                ,_0: _v15._0
                                ,_1: _v15._1
                                ,_2: c
                                ,_3: _v15._3
                                ,_4: e};
                      }),
                      _v14._2(_v15._2),
                      _v14._4(_v15._4)),
                      A2($Basics._op["++"],
                      A3($List.map2,
                      F2(function (b,e) {
                         return {ctor: "_Tuple5"
                                ,_0: _v15._0
                                ,_1: b
                                ,_2: _v15._2
                                ,_3: _v15._3
                                ,_4: e};
                      }),
                      _v14._1(_v15._1),
                      _v14._4(_v15._4)),
                      A2($Basics._op["++"],
                      A3($List.map2,
                      F2(function (a,e) {
                         return {ctor: "_Tuple5"
                                ,_0: a
                                ,_1: _v15._1
                                ,_2: _v15._2
                                ,_3: _v15._3
                                ,_4: e};
                      }),
                      _v14._0(_v15._0),
                      _v14._4(_v15._4)),
                      A2($Basics._op["++"],
                      A3($List.map2,
                      F2(function (c,d) {
                         return {ctor: "_Tuple5"
                                ,_0: _v15._0
                                ,_1: _v15._1
                                ,_2: c
                                ,_3: d
                                ,_4: _v15._4};
                      }),
                      _v14._2(_v15._2),
                      _v14._3(_v15._3)),
                      A2($Basics._op["++"],
                      A3($List.map2,
                      F2(function (b,d) {
                         return {ctor: "_Tuple5"
                                ,_0: _v15._0
                                ,_1: b
                                ,_2: _v15._2
                                ,_3: d
                                ,_4: _v15._4};
                      }),
                      _v14._1(_v15._1),
                      _v14._3(_v15._3)),
                      A2($Basics._op["++"],
                      A3($List.map2,
                      F2(function (a,d) {
                         return {ctor: "_Tuple5"
                                ,_0: a
                                ,_1: _v15._1
                                ,_2: _v15._2
                                ,_3: d
                                ,_4: _v15._4};
                      }),
                      _v14._0(_v15._0),
                      _v14._3(_v15._3)),
                      A2($Basics._op["++"],
                      A3($List.map2,
                      F2(function (b,c) {
                         return {ctor: "_Tuple5"
                                ,_0: _v15._0
                                ,_1: b
                                ,_2: c
                                ,_3: _v15._3
                                ,_4: _v15._4};
                      }),
                      _v14._1(_v15._1),
                      _v14._2(_v15._2)),
                      A2($Basics._op["++"],
                      A3($List.map2,
                      F2(function (a,c) {
                         return {ctor: "_Tuple5"
                                ,_0: a
                                ,_1: _v15._1
                                ,_2: c
                                ,_3: _v15._3
                                ,_4: _v15._4};
                      }),
                      _v14._0(_v15._0),
                      _v14._2(_v15._2)),
                      A2($Basics._op["++"],
                      A3($List.map2,
                      F2(function (a,b) {
                         return {ctor: "_Tuple5"
                                ,_0: a
                                ,_1: b
                                ,_2: _v15._2
                                ,_3: _v15._3
                                ,_4: _v15._4};
                      }),
                      _v14._0(_v15._0),
                      _v14._1(_v15._1)),
                      A2($Basics._op["++"],
                      A4($List.map3,
                      F3(function (c,d,e) {
                         return {ctor: "_Tuple5"
                                ,_0: _v15._0
                                ,_1: _v15._1
                                ,_2: c
                                ,_3: d
                                ,_4: e};
                      }),
                      _v14._2(_v15._2),
                      _v14._3(_v15._3),
                      _v14._4(_v15._4)),
                      A2($Basics._op["++"],
                      A4($List.map3,
                      F3(function (b,d,e) {
                         return {ctor: "_Tuple5"
                                ,_0: _v15._0
                                ,_1: b
                                ,_2: _v15._2
                                ,_3: d
                                ,_4: e};
                      }),
                      _v14._1(_v15._1),
                      _v14._3(_v15._3),
                      _v14._4(_v15._4)),
                      A2($Basics._op["++"],
                      A4($List.map3,
                      F3(function (a,d,e) {
                         return {ctor: "_Tuple5"
                                ,_0: a
                                ,_1: _v15._1
                                ,_2: _v15._2
                                ,_3: d
                                ,_4: e};
                      }),
                      _v14._0(_v15._0),
                      _v14._3(_v15._3),
                      _v14._4(_v15._4)),
                      A2($Basics._op["++"],
                      A4($List.map3,
                      F3(function (a,c,d) {
                         return {ctor: "_Tuple5"
                                ,_0: a
                                ,_1: _v15._1
                                ,_2: c
                                ,_3: d
                                ,_4: _v15._4};
                      }),
                      _v14._0(_v15._0),
                      _v14._2(_v15._2),
                      _v14._3(_v15._3)),
                      A2($Basics._op["++"],
                      A4($List.map3,
                      F3(function (a,b,d) {
                         return {ctor: "_Tuple5"
                                ,_0: a
                                ,_1: b
                                ,_2: _v15._2
                                ,_3: d
                                ,_4: _v15._4};
                      }),
                      _v14._0(_v15._0),
                      _v14._1(_v15._1),
                      _v14._3(_v15._3)),
                      A2($Basics._op["++"],
                      A4($List.map3,
                      F3(function (a,b,c) {
                         return {ctor: "_Tuple5"
                                ,_0: a
                                ,_1: b
                                ,_2: c
                                ,_3: _v15._3
                                ,_4: _v15._4};
                      }),
                      _v14._0(_v15._0),
                      _v14._1(_v15._1),
                      _v14._2(_v15._2)),
                      A2($Basics._op["++"],
                      A5($List.map4,
                      F4(function (b,c,d,e) {
                         return {ctor: "_Tuple5"
                                ,_0: _v15._0
                                ,_1: b
                                ,_2: c
                                ,_3: d
                                ,_4: e};
                      }),
                      _v14._1(_v15._1),
                      _v14._2(_v15._2),
                      _v14._3(_v15._3),
                      _v14._4(_v15._4)),
                      A2($Basics._op["++"],
                      A5($List.map4,
                      F4(function (a,c,d,e) {
                         return {ctor: "_Tuple5"
                                ,_0: a
                                ,_1: _v15._1
                                ,_2: c
                                ,_3: d
                                ,_4: e};
                      }),
                      _v14._0(_v15._0),
                      _v14._2(_v15._2),
                      _v14._3(_v15._3),
                      _v14._4(_v15._4)),
                      A2($Basics._op["++"],
                      A5($List.map4,
                      F4(function (a,b,d,e) {
                         return {ctor: "_Tuple5"
                                ,_0: a
                                ,_1: b
                                ,_2: _v15._2
                                ,_3: d
                                ,_4: e};
                      }),
                      _v14._0(_v15._0),
                      _v14._1(_v15._1),
                      _v14._3(_v15._3),
                      _v14._4(_v15._4)),
                      A2($Basics._op["++"],
                      A5($List.map4,
                      F4(function (a,b,c,d) {
                         return {ctor: "_Tuple5"
                                ,_0: a
                                ,_1: b
                                ,_2: c
                                ,_3: d
                                ,_4: _v15._4};
                      }),
                      _v14._0(_v15._0),
                      _v14._1(_v15._1),
                      _v14._2(_v15._2),
                      _v14._3(_v15._3)),
                      A6($List.map5,
                      F5(function (v0,v1,v2,v3,v4) {
                         return {ctor: "_Tuple5"
                                ,_0: v0
                                ,_1: v1
                                ,_2: v2
                                ,_3: v3
                                ,_4: v4};
                      }),
                      _v14._0(_v15._0),
                      _v14._1(_v15._1),
                      _v14._2(_v15._2),
                      _v14._3(_v15._3),
                      _v14._4(_v15._4)))))))))))))))))))))))))));}
                 _U.badCase($moduleName,
                 "between lines 280 and 305");
              }();}
         _U.badCase($moduleName,
         "between lines 280 and 305");
      }();
   });
   var tuple4 = F2(function (_v28,
   _v29) {
      return function () {
         switch (_v29.ctor)
         {case "_Tuple4":
            return function () {
                 switch (_v28.ctor)
                 {case "_Tuple4":
                    return A2($Basics._op["++"],
                      A2($List.map,
                      function (d) {
                         return {ctor: "_Tuple4"
                                ,_0: _v29._0
                                ,_1: _v29._1
                                ,_2: _v29._2
                                ,_3: d};
                      },
                      _v28._3(_v29._3)),
                      A2($Basics._op["++"],
                      A2($List.map,
                      function (c) {
                         return {ctor: "_Tuple4"
                                ,_0: _v29._0
                                ,_1: _v29._1
                                ,_2: c
                                ,_3: _v29._3};
                      },
                      _v28._2(_v29._2)),
                      A2($Basics._op["++"],
                      A2($List.map,
                      function (b) {
                         return {ctor: "_Tuple4"
                                ,_0: _v29._0
                                ,_1: b
                                ,_2: _v29._2
                                ,_3: _v29._3};
                      },
                      _v28._1(_v29._1)),
                      A2($Basics._op["++"],
                      A2($List.map,
                      function (a) {
                         return {ctor: "_Tuple4"
                                ,_0: a
                                ,_1: _v29._1
                                ,_2: _v29._2
                                ,_3: _v29._3};
                      },
                      _v28._0(_v29._0)),
                      A2($Basics._op["++"],
                      A3($List.map2,
                      F2(function (c,d) {
                         return {ctor: "_Tuple4"
                                ,_0: _v29._0
                                ,_1: _v29._1
                                ,_2: c
                                ,_3: d};
                      }),
                      _v28._2(_v29._2),
                      _v28._3(_v29._3)),
                      A2($Basics._op["++"],
                      A3($List.map2,
                      F2(function (b,d) {
                         return {ctor: "_Tuple4"
                                ,_0: _v29._0
                                ,_1: b
                                ,_2: _v29._2
                                ,_3: d};
                      }),
                      _v28._1(_v29._1),
                      _v28._3(_v29._3)),
                      A2($Basics._op["++"],
                      A3($List.map2,
                      F2(function (a,d) {
                         return {ctor: "_Tuple4"
                                ,_0: a
                                ,_1: _v29._1
                                ,_2: _v29._2
                                ,_3: d};
                      }),
                      _v28._0(_v29._0),
                      _v28._3(_v29._3)),
                      A2($Basics._op["++"],
                      A3($List.map2,
                      F2(function (b,c) {
                         return {ctor: "_Tuple4"
                                ,_0: _v29._0
                                ,_1: b
                                ,_2: c
                                ,_3: _v29._3};
                      }),
                      _v28._1(_v29._1),
                      _v28._2(_v29._2)),
                      A2($Basics._op["++"],
                      A3($List.map2,
                      F2(function (a,c) {
                         return {ctor: "_Tuple4"
                                ,_0: a
                                ,_1: _v29._1
                                ,_2: c
                                ,_3: _v29._3};
                      }),
                      _v28._0(_v29._0),
                      _v28._2(_v29._2)),
                      A2($Basics._op["++"],
                      A3($List.map2,
                      F2(function (a,b) {
                         return {ctor: "_Tuple4"
                                ,_0: a
                                ,_1: b
                                ,_2: _v29._2
                                ,_3: _v29._3};
                      }),
                      _v28._0(_v29._0),
                      _v28._1(_v29._1)),
                      A2($Basics._op["++"],
                      A4($List.map3,
                      F3(function (b,c,d) {
                         return {ctor: "_Tuple4"
                                ,_0: _v29._0
                                ,_1: b
                                ,_2: c
                                ,_3: d};
                      }),
                      _v28._1(_v29._1),
                      _v28._2(_v29._2),
                      _v28._3(_v29._3)),
                      A2($Basics._op["++"],
                      A4($List.map3,
                      F3(function (a,c,d) {
                         return {ctor: "_Tuple4"
                                ,_0: a
                                ,_1: _v29._1
                                ,_2: c
                                ,_3: d};
                      }),
                      _v28._0(_v29._0),
                      _v28._2(_v29._2),
                      _v28._3(_v29._3)),
                      A2($Basics._op["++"],
                      A4($List.map3,
                      F3(function (a,b,c) {
                         return {ctor: "_Tuple4"
                                ,_0: a
                                ,_1: b
                                ,_2: c
                                ,_3: _v29._3};
                      }),
                      _v28._0(_v29._0),
                      _v28._1(_v29._1),
                      _v28._2(_v29._2)),
                      A5($List.map4,
                      F4(function (v0,v1,v2,v3) {
                         return {ctor: "_Tuple4"
                                ,_0: v0
                                ,_1: v1
                                ,_2: v2
                                ,_3: v3};
                      }),
                      _v28._0(_v29._0),
                      _v28._1(_v29._1),
                      _v28._2(_v29._2),
                      _v28._3(_v29._3)))))))))))))));}
                 _U.badCase($moduleName,
                 "between lines 256 and 269");
              }();}
         _U.badCase($moduleName,
         "between lines 256 and 269");
      }();
   });
   var tuple3 = F2(function (_v40,
   _v41) {
      return function () {
         switch (_v41.ctor)
         {case "_Tuple3":
            return function () {
                 switch (_v40.ctor)
                 {case "_Tuple3":
                    return A2($Basics._op["++"],
                      A2($List.map,
                      function (c) {
                         return {ctor: "_Tuple3"
                                ,_0: _v41._0
                                ,_1: _v41._1
                                ,_2: c};
                      },
                      _v40._2(_v41._2)),
                      A2($Basics._op["++"],
                      A2($List.map,
                      function (b) {
                         return {ctor: "_Tuple3"
                                ,_0: _v41._0
                                ,_1: b
                                ,_2: _v41._2};
                      },
                      _v40._1(_v41._1)),
                      A2($Basics._op["++"],
                      A2($List.map,
                      function (a) {
                         return {ctor: "_Tuple3"
                                ,_0: a
                                ,_1: _v41._1
                                ,_2: _v41._2};
                      },
                      _v40._0(_v41._0)),
                      A2($Basics._op["++"],
                      A3($List.map2,
                      F2(function (b,c) {
                         return {ctor: "_Tuple3"
                                ,_0: _v41._0
                                ,_1: b
                                ,_2: c};
                      }),
                      _v40._1(_v41._1),
                      _v40._2(_v41._2)),
                      A2($Basics._op["++"],
                      A3($List.map2,
                      F2(function (a,c) {
                         return {ctor: "_Tuple3"
                                ,_0: a
                                ,_1: _v41._1
                                ,_2: c};
                      }),
                      _v40._0(_v41._0),
                      _v40._2(_v41._2)),
                      A2($Basics._op["++"],
                      A3($List.map2,
                      F2(function (a,b) {
                         return {ctor: "_Tuple3"
                                ,_0: a
                                ,_1: b
                                ,_2: _v41._2};
                      }),
                      _v40._0(_v41._0),
                      _v40._1(_v41._1)),
                      A4($List.map3,
                      F3(function (v0,v1,v2) {
                         return {ctor: "_Tuple3"
                                ,_0: v0
                                ,_1: v1
                                ,_2: v2};
                      }),
                      _v40._0(_v41._0),
                      _v40._1(_v41._1),
                      _v40._2(_v41._2))))))));}
                 _U.badCase($moduleName,
                 "between lines 241 and 247");
              }();}
         _U.badCase($moduleName,
         "between lines 241 and 247");
      }();
   });
   var tuple = F2(function (_v50,
   _v51) {
      return function () {
         switch (_v51.ctor)
         {case "_Tuple2":
            return function () {
                 switch (_v50.ctor)
                 {case "_Tuple2":
                    return A2($Basics._op["++"],
                      A2($List.map,
                      F2(function (v0,v1) {
                         return {ctor: "_Tuple2"
                                ,_0: v0
                                ,_1: v1};
                      })(_v51._0),
                      _v50._1(_v51._1)),
                      A2($Basics._op["++"],
                      A2($List.map,
                      A2($Basics.flip,
                      F2(function (v0,v1) {
                         return {ctor: "_Tuple2"
                                ,_0: v0
                                ,_1: v1};
                      }),
                      _v51._1),
                      _v50._0(_v51._0)),
                      A3($List.map2,
                      F2(function (v0,v1) {
                         return {ctor: "_Tuple2"
                                ,_0: v0
                                ,_1: v1};
                      }),
                      _v50._0(_v51._0),
                      _v50._1(_v51._1))));}
                 _U.badCase($moduleName,
                 "between lines 230 and 232");
              }();}
         _U.badCase($moduleName,
         "between lines 230 and 232");
      }();
   });
   var list = F2(function (shrink,
   l) {
      return function () {
         var removes = F3(function (k,
         n,
         l) {
            return _U.cmp(k,
            n) > 0 ? _L.fromArray([]) : $List.isEmpty(l) ? _L.fromArray([_L.fromArray([])]) : function () {
               var rest = A2($List.drop,
               k,
               l);
               var first = A2($List.take,k,l);
               return A2($List._op["::"],
               rest,
               A2($List.map,
               F2(function (x,y) {
                  return A2($Basics._op["++"],
                  x,
                  y);
               })(first),
               A3(removes,k,n - k,rest)));
            }();
         });
         var shrinkOne = function (l) {
            return function () {
               switch (l.ctor)
               {case "::":
                  return A2($Basics._op["++"],
                    A2($List.map,
                    A2($Basics.flip,
                    F2(function (x,y) {
                       return A2($List._op["::"],
                       x,
                       y);
                    }),
                    l._1),
                    shrink(l._0)),
                    A2($List.map,
                    F2(function (x,y) {
                       return A2($List._op["::"],
                       x,
                       y);
                    })(l._0),
                    shrinkOne(l._1)));
                  case "[]":
                  return _L.fromArray([]);}
               _U.badCase($moduleName,
               "between lines 195 and 202");
            }();
         };
         var n = $List.length(l);
         return A2($Basics._op["++"],
         A2($List.concatMap,
         function (k) {
            return A3(removes,k,n,l);
         },
         A2(takeWhile,
         function (x) {
            return _U.cmp(x,0) > 0;
         },
         A3(iterate,
         n,
         function (n) {
            return n / 2 | 0;
         },
         n))),
         shrinkOne(l));
      }();
   });
   var array = function (shrink) {
      return A3(convert,
      $Array.fromList,
      $Array.toList,
      list(shrink));
   };
   var result = F3(function (shrinkError,
   shrinkValue,
   r) {
      return function () {
         switch (r.ctor)
         {case "Err":
            return A2($List.map,
              $Result.Err,
              shrinkError(r._0));
            case "Ok": return A2($List.map,
              $Result.Ok,
              shrinkValue(r._0));}
         _U.badCase($moduleName,
         "between lines 181 and 183");
      }();
   });
   var maybe = F2(function (shrink,
   m) {
      return function () {
         switch (m.ctor)
         {case "Just":
            return A2($List._op["::"],
              $Maybe.Nothing,
              A2($List.map,
              $Maybe.Just,
              shrink(m._0)));
            case "Nothing":
            return _L.fromArray([]);}
         _U.badCase($moduleName,
         "between lines 172 and 174");
      }();
   });
   var atLeastFloat = F2(function (min,
   n) {
      return _U.cmp(n,
      0) < 0 && _U.cmp(n,
      min) > -1 ? A2($List._op["::"],
      0 - n,
      A2($List.map,
      F2(function (x,y) {
         return x * y;
      })(-1),
      A2(seriesFloat,
      0,
      0 - n))) : A2(seriesFloat,
      A2($Basics.max,0,min),
      n);
   });
   var $float = function (n) {
      return _U.cmp(n,
      0) < 0 ? A2($List._op["::"],
      0 - n,
      A2($List.map,
      F2(function (x,y) {
         return x * y;
      })(-1),
      A2(seriesFloat,
      0,
      0 - n))) : A2(seriesFloat,0,n);
   };
   var atLeastInt = F2(function (min,
   n) {
      return _U.cmp(n,
      0) < 0 && _U.cmp(n,
      min) > -1 ? A2($List._op["::"],
      0 - n,
      A2($List.map,
      F2(function (x,y) {
         return x * y;
      })(-1),
      A2(seriesInt,
      0,
      0 - n))) : A2(seriesInt,
      A2($Basics.max,0,min),
      n);
   });
   var atLeastChar = function ($char) {
      return A3(convert,
      $Char.fromCode,
      $Char.toCode,
      atLeastInt($Char.toCode($char)));
   };
   var character = atLeastChar($Char.fromCode(32));
   var string = A3(convert,
   $String.fromList,
   $String.toList,
   list(character));
   var $int = function (n) {
      return _U.cmp(n,
      0) < 0 ? A2($List._op["::"],
      0 - n,
      A2($List.map,
      F2(function (x,y) {
         return x * y;
      })(-1),
      A2(seriesInt,
      0,
      0 - n))) : A2(seriesInt,0,n);
   };
   var $char = A3(convert,
   $Char.fromCode,
   $Char.toCode,
   $int);
   var order = function (o) {
      return function () {
         switch (o.ctor)
         {case "EQ":
            return _L.fromArray([]);
            case "GT":
            return _L.fromArray([$Basics.EQ
                                ,$Basics.LT]);
            case "LT":
            return _L.fromArray([$Basics.EQ]);}
         _U.badCase($moduleName,
         "between lines 81 and 84");
      }();
   };
   var bool = function (b) {
      return function () {
         switch (b)
         {case false:
            return _L.fromArray([]);
            case true:
            return _L.fromArray([false]);}
         _U.badCase($moduleName,
         "between lines 74 and 76");
      }();
   };
   var noShrink = function (_v68) {
      return function () {
         return _L.fromArray([]);
      }();
   };
   var $void = noShrink;
   _elm.Shrink.values = {_op: _op
                        ,noShrink: noShrink
                        ,$void: $void
                        ,bool: bool
                        ,order: order
                        ,$int: $int
                        ,atLeastInt: atLeastInt
                        ,$float: $float
                        ,atLeastFloat: atLeastFloat
                        ,$char: $char
                        ,atLeastChar: atLeastChar
                        ,character: character
                        ,string: string
                        ,maybe: maybe
                        ,result: result
                        ,list: list
                        ,array: array
                        ,tuple: tuple
                        ,tuple3: tuple3
                        ,tuple4: tuple4
                        ,tuple5: tuple5
                        ,convert: convert
                        ,map: map
                        ,andMap: andMap
                        ,keepIf: keepIf
                        ,dropIf: dropIf
                        ,merge: merge};
   return _elm.Shrink.values;
};