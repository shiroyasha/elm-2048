Elm.Random = Elm.Random || {};
Elm.Random.Result = Elm.Random.Result || {};
Elm.Random.Result.make = function (_elm) {
   "use strict";
   _elm.Random = _elm.Random || {};
   _elm.Random.Result = _elm.Random.Result || {};
   if (_elm.Random.Result.values)
   return _elm.Random.Result.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Random.Result",
   $Basics = Elm.Basics.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Random = Elm.Random.make(_elm),
   $Random$Extra = Elm.Random.Extra.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var error = function (generator) {
      return A2($Random$Extra.map,
      $Result.Err,
      generator);
   };
   var ok = function (generator) {
      return A2($Random$Extra.map,
      $Result.Ok,
      generator);
   };
   var result = F2(function (errorGenerator,
   okGenerator) {
      return A2($Random$Extra.frequency,
      _L.fromArray([{ctor: "_Tuple2"
                    ,_0: 1
                    ,_1: error(errorGenerator)}
                   ,{ctor: "_Tuple2"
                    ,_0: 1
                    ,_1: ok(okGenerator)}]),
      ok(okGenerator));
   });
   _elm.Random.Result.values = {_op: _op
                               ,ok: ok
                               ,error: error
                               ,result: result};
   return _elm.Random.Result.values;
};