Elm.Random = Elm.Random || {};
Elm.Random.Array = Elm.Random.Array || {};
Elm.Random.Array.make = function (_elm) {
   "use strict";
   _elm.Random = _elm.Random || {};
   _elm.Random.Array = _elm.Random.Array || {};
   if (_elm.Random.Array.values)
   return _elm.Random.Array.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Random.Array",
   $Array = Elm.Array.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Random = Elm.Random.make(_elm),
   $Random$Extra = Elm.Random.Extra.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var emptyArray = $Random$Extra.constant($Array.empty);
   var array = F2(function (arrayLength,
   generator) {
      return A2($Random$Extra.map,
      $Array.fromList,
      A2($Random.list,
      arrayLength,
      generator));
   });
   var rangeLengthArray = F3(function (minLength,
   maxLength,
   generator) {
      return A2($Random$Extra.flatMap,
      function (len) {
         return A2(array,
         len,
         generator);
      },
      A2($Random.$int,
      minLength,
      maxLength));
   });
   _elm.Random.Array.values = {_op: _op
                              ,array: array
                              ,emptyArray: emptyArray
                              ,rangeLengthArray: rangeLengthArray};
   return _elm.Random.Array.values;
};